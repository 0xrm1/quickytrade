version: '3.8'

services:
  # API Gateway
  api-gateway:
    build:
      context: ./services/api-gateway
      target: production
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - API_GATEWAY_PORT=5000
      - AUTH_SERVICE_URL=http://auth-service:5002
      - BINANCE_API_SERVICE_URL=http://binance-api-service:5001
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET}
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX=100
      - LOG_LEVEL=info
      - CORS_ORIGIN=${CORS_ORIGIN}
    depends_on:
      - redis
      - auth-service
      - binance-api-service
    networks:
      - quickytrade-network
    restart: unless-stopped
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Auth Service
  auth-service:
    build:
      context: ./services/auth-service
      target: production
    ports:
      - "5002:5002"
    environment:
      - NODE_ENV=production
      - AUTH_SERVICE_PORT=5002
      - MONGODB_URI=mongodb://mongodb:27017/quickytrade
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_EXPIRES_IN=1h
      - JWT_REFRESH_EXPIRES_IN=7d
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX=100
      - LOG_LEVEL=info
    depends_on:
      - mongodb
      - redis
    networks:
      - quickytrade-network
    restart: unless-stopped
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Binance API Service
  binance-api-service:
    build:
      context: ./services/binance-api
      target: production
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=production
      - BINANCE_API_PORT=5001
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - BINANCE_API_KEY=${BINANCE_API_KEY}
      - BINANCE_API_SECRET=${BINANCE_API_SECRET}
      - PRICE_CHANGE_THRESHOLD=0.5
      - VOLUME_CHANGE_THRESHOLD=5.0
      - JWT_SECRET=${JWT_SECRET}
      - LOG_LEVEL=info
    depends_on:
      - redis
    networks:
      - quickytrade-network
    restart: unless-stopped
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # MongoDB
  mongodb:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - quickytrade-network
    restart: unless-stopped
    deploy:
      placement:
        constraints:
          - node.role == manager
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis
  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - quickytrade-network
    restart: unless-stopped
    deploy:
      placement:
        constraints:
          - node.role == manager
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Load Balancer
  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api-gateway
      - auth-service
      - binance-api-service
    networks:
      - quickytrade-network
    restart: unless-stopped
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  quickytrade-network:
    driver: bridge
    attachable: true 